<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="eventsList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="eventsList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        DwAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/xQAAfUB9AF6BFkBegEb
        AfQ1AAH0AZoIWQF6AfMzAAH1AXoKWQF6AfMqAAH0Af8GAAF6AVkBUQEVAUQBWANZAUoBQwFKAVkBegH0
        IQAB9AHwAfMB/wMAAf8C9AUAAfQCWQFKAfcBBwFzAlgBUQLvASICWQEbIAAB/wHsAW4BcwEHAf8CAAL/
        AfMFAAF6AlkBSwH3Ae8B7QJKAewB7wH3AUoCWQF6IAAB9AJzAW4BcwHyAwAB8AHzBQABUwNZAVEBSgFR
        AVgBWQFSAUoBUQNZAVMgAAHzARwBcwEcAW4BHAEAAfQB7gHxAfMFAAJTAVkBOAFZAuUCWQHlAaABXgNZ
        AVMgAAH/ARwB7AHqAXMBbgH1AbwB9AEAAv8CAAL/AVMDWQGaAe0BkgF6AeUB7wHsAZkDWQFTIAAB/wG8
        ARwBbQH4ARQBeAFzAfAB9gH0AwAC/wFTA1kBwwFtAesBmQGaAewBEgGZA1kBUyEAAf8B8AHtAW4BCwFE
        AUkBUAF4AfMDAAH/AfQBegFTA3oBGgGZAVIBWAEcARoBegFZAXoBWQF6IwAC/wELAR4BDwFJAlYBGwEA
        Af8BAAH0AQABdQJ6AXkBdAFSAnoCUgF5A3oB9CUAARQCDgFPA1UBmAHuAfMB/wEAAZoBegGaAnQEmgJ0
        AZoBegGaAfUlAAHyAg4BSANOAU8B8QHyAfQBAAH/ApoIwwKaAfQmAAH/AfEBFAEPAUkBTwHqAfAB9AL/
        AgAB/wEaAZoBGgHDAvYBwwEaApoB9SkAAf8BvAEHAbwB/wkAAXoBdQJ6AXUBegH0JwAB9QH0AXoEWQF6
        ARsB9AcAAfQB8wGZAUsBKQFzAvQFAAFGAf8DAAL/CAAC/wIAAv8BAAH/AgABtgEbBgAB9AGaCFkBegHz
        BQAB8gFzAVEBUgMxAlEBGgQAAUYBkwIAAf8BkwF0AfYHAAH/AQAG/wEAAf8BiAGZAf8EAAH1AXoHWQF5
        AZEBeQF6AfMDAAHyAVEBMQU4ATcBMQFLAQcDAAGTAW8B9QH/AXQBTAJLAfQGAAL/BQAB/wEAAf8BjgGT
        Af8EAAF6A1kBSwFYAVkBXgFZAZEB0wGzAVkBegH0AQAB9AFLAVgBWQExASkBAwIpAVEBOAExASoBvAIA
        AUYBkwHvARsBUQFLAUwBRQFMAf8FAAT/BQAB/wGOAZMBGwMAAfQEWQFSA0oBUgGYAdMB7QJZARsBAAFz
        ATcBWQFYAQMDUQEwAQMBUQE3ATEBUQH0AfMCRgGTARwCUQFLAkUBBwH/BAAE/wUAAf8BjgGTAZkB/wIA
        AXoEWQE4ATcBWAE3ATgBeQGzAVgCWQF6AfIBUQFZAVIBAwFYBF4BWAFRATABNwEwAfMDkwEaARwBeQFR
        AUoDRQEHAf8DAAH/AfQC/wUAAf8BiAGTAXkB/wIAAlMCWQFYBngBHANZAVMBbgFYAlkBWAFeAVkBXgE4
        Al4BWQE3ATgBMQEcBAABcwFRA0oDRQEHAwAB/wHyAvQFAAH/AYgBkwF5AfQCAAJTAlkBeQEJAdwBGQEJ
        AdwBCQF5ATgCWQFTAUoBWAE4Al4BWQE4AVkBXgRZATgBMQEpBAABcgFQA0oCSwJFAbwCAAH/AfQBjgG9
        AfQEAAH/AWkBkwF5AfQCAAFTA1kBmgHzAe0BBwG8AewB8AHDA1kBUwFKAVgBWQE3AVEBSgFRAVkBWAFK
        AUsBNwFZATcBMQFLBAABBwFPAVACUQNLAkUB/wEAAv8BvQGOAb0C9AH/AQAB/wFpAZMBeQEbAgACUwJZ
        AcMB8QHqAZIBBwETAQcBwwNZAVMBcwJYAVEB7wHzARwBUQFzAfMBBwFRATcBOAFSAXMEAAHzAUgBTwFQ
        A1ECSwFFAZMBAAH/AQAB/wHzAfEB9AGZARsB9AH/AUUBjgF0ARsCAAF6AVMBegFZAXkB9AHyAfMB9AHw
        AfMBmgJ6AVkBegH0AVEBMAHtAfMB7QG8AUoB8wEcAQcB9wEpATgBUQHxBAAB/wFxAUgBTwJQAVEBSgJL
        AUUC/wIAAv8B9AIcARoB9AFFAW8BUgEbAwABWQJ6AVIBmQLDARoBwwGZAVIDegH0AQABcwExAVEBEgEP
        AeoBUQFuASIBFQFLAVgBNwFRAfQFAAH0AXIBSAFPAUkCSgFRAQMBRAL/BAAB/wHzAe4BHAGZAXQBaQF0
        AfQDAAGaAXoBmgGgAXQBeQGaAaABeQF0ApoBegGaAfUBAAH0AXQBNwEpASIBAwFZATACIwExATgBUQHy
        BwAC9AFJAUgCSQFKAVEBHAP/AQAF/wH0AQcBcwFuAXMB9AMAAf8CmgIaA5kBHAEaAcMCmgH0AwAB9AF0
        ATEBUgFYAVkBXgNSAVEB8goAAfUBBwJJAeoBSgFzAfcB/wEAAf8CAAT/AfQB8gLuAfQB/wMAAf8CmgEa
        AhsBGgEbARoCmgH1BQAB9AF0AVECWAE3ATEBUQFzAfQMAAL/AUkCTwH0A/8EAAL/AQAC/wL0AfMB9AYA
        AXoBUwJ6AXUBegH0CQAB9AEcAUoBIwEcEgABCAGYAgAC/wYAB/8BAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ASADAAEBAQABAQYAAQEWAAP/AQAC/wHgAQcEAAL/AcABAwQAAv8BgAEBBAAB/wGfAYAFAAGHAR8GAAED
        AR8GAAEDAZ8GAAECAR8HAAFMBwABHAYAAYABHAYAAeABCgGABQAB+AEAAYAFAAH4AQABgAEBBAAB+AEA
        AcABAwQAAf4BDwH4AQ8EAAHgAQcB8AEPAZwB/wEyAc8BwAEDAeABBwGYAX8BQAGHAYABAQHAAQMBgAE/
        AT4BhwGAAQABgAEBAYABHwEPAYcCAAGAAgACDwGDBQABBwEPAYMEAAHwAQcBDwGDBAAB8AEDAQcBgwQA
        AfABAQEAAYMEAAHwAQEBQAEDBAAB8AEAAWABAwGAAQABgAEAAfgBAAF4AQMBgAEAAYABAQH8AQABIAED
        AYABAQHAAQMB/wEAAVgBAQHAAQMB4AEHAf8BgAE8AYEB+AEPAfgBPwH/AfMBPwEBCw==
</value>
  </data>
</root>